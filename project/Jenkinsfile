#!/usr/bin/env groovy

pipeline {
    agent any
    
    stages{
        stage('Checking cft Installation') {
            steps {
                echo 'Checking CFT Version'
                sh 'cft -h'
            }
        }
        stage('Create Project') {
            environment {
                // Using returnStdout
                CFT_ORGANIZATION_FOLDER = """${sh(
                        script: 'cp /home/tomcat/cft-env-vars . && . ./cft-env-vars && printenv | grep CFT_ORGANIZATION_FOLDER | cut -d"=" -f2'
                    )}""" 
                // Using returnStdout
                CFT_ORGANIZATION_ID = """${sh(
                        returnStdout: true,
                        script: 'cp /home/tomcat/cft-env-vars . && . ./cft-env-vars && printenv | grep CFT_ORGANIZATION_ID | cut -d"=" -f2'
                    )}""" 
                // Using returnStdout
                CFT_BILLING_ACCOUNT_ID = """${sh(
                        returnStdout: true,
                        script: 'cp /home/tomcat/cft-env-vars . && . ./cft-env-vars && printenv | grep CFT_BILLING_ACCOUNT_ID | cut -d"=" -f2'
                    )}""" 
                // Using returnStdout
                CFT_PIPELINE_DEPLOYER_ROLE = """${sh(
                        returnStdout: true,
                        script: 'cp /home/tomcat/cft-env-vars . && . ./cft-env-vars && printenv | grep CFT_PIPELINE_DEPLOYER_ROLE | cut -d"=" -f2'
                    )}""" 
            }
            steps {
                sh 'printenv'
            }
        }
    }
    post {
        always {
            echo 'This will always run'
        }
        success {
            echo 'This will run only if successful'
        }
        failure {
            echo 'This will run only if failed'
        }
    }
}